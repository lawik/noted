name: Elixir CI
'on':
  push:
    tags:
      - v*
jobs:
  test:
    runs-on: '${{ matrix.os }}'
    name: >-
      OTP ${{ matrix.otp }} | Elixir ${{ matrix.elixir }} | Node ${{ matrix.node
      }} | OS ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - - ubuntu-20.04
        otp:
          - 23.x
        elixir:
          - 1.11.x
        node:
          - 12.x
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          otp-version: '${{ matrix.otp }}'
          elixir-version: '${{ matrix.elixir }}'
      - uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node }}'
      - name: Install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          npm install --prefix ./assets
      - name: Run tests
        run: |
          mix compile --warnings-as-errors
          mix test
          mix credo
          mix format --check-formatted
        env:
          MIX_ENV: test
          TELEGRAM_BOT_NAME: '${{ secrets.TELEGRAM_BOT_NAME }}'
          TELEGRAM_BOT_SECRET: '${{ secrets.TELEGRAM_BOT_SECRET }}'
      - name: Prod compile
        run: |
          mix compile
          npm run deploy --prefix ./assets
          mix phx.digest
        env:
          MIX_ENV: prod
          SECRET_KEY_BASE: oTgI3dI2Pm/hmY1Ew779LdDU5gIXBThauoq+alr3yYSx+1heuY15C3cwgjYq17g1
          DATABASE_URL: database.db
      - name: Create Noted Github release
        run: |
          mix release
          tar -czf noted.tar.gz _build/prod/rel/noted
        env:
          MIX_ENV: prod
          SECRET_KEY_BASE: oTgI3dI2Pm/hmY1Ew779LdDU5gIXBThauoq+alr3yYSx+1heuY15C3cwgjYq17g1
          DATABASE_URL: database.db
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          prerelease: false
          files: |
            noted.tar.gz
